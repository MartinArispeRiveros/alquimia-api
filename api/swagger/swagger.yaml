swagger: "2.0"
info:
  version: "0.0.1"
  title: ActuaProducciones App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
parameters:
  Token:
    name: token
    type: string
    in: header
    required: true
paths:
  /uploader:
    x-swagger-router-controller: uploader
    post:
      description: Upload a given image file
      operationId: uploadImage
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: The base64 encoded multipart file attachment.
          required: false
          type: file
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/File"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /client:
    x-swagger-router-controller: client
    post:
      description: Create a new client
      operationId: saveClient
      parameters:
        - name: body
          in: body
          description: The client information
          required: false
          schema:
            $ref: "#/definitions/Client"
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a collection of clients
      operationId: getAllClients
      parameters:
        - name: client_id
          in: query
          description: The ciient id
          required: false
          type: string
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /client/{id}:
    x-swagger-router-controller: client
    get:
      description: Returns a specific client
      operationId: getOneClient
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          type: integer
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update a specific client
      operationId: updateClient
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          type: string
        - name: body
          in: body
          description: The client information
          required: false
          schema:
            $ref: "#/definitions/Client"
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Removes a specific client
      operationId: removeClient
      parameters:
        - name: id
          in: path
          description: The client id
          required: true
          type: string
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Client"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: authentication
    post:
      description: Validates user credentials and returns the token to the caller
      # used as the method name of the controller
      operationId: login
      parameters:
        - name: body
          in: body
          description: The user credentials
          required: false
          schema:
            $ref: "#/definitions/UserCredential"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TokenResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: user
    post:
      description: Create a new user
      operationId: save
      parameters:
        - name: body
          in: body
          description: The user information
          required: false
          schema:
            $ref: "#/definitions/User"
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a collection of users
      operationId: getAll
      parameters:
        - name: user_id
          in: query
          description: The user id
          required: false
          type: string
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    x-swagger-router-controller: user
    get:
      description: Returns a specific user
      operationId: getOne
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          type: integer
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update a specific user
      operationId: update
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          type: string
        - name: body
          in: body
          description: The user information
          required: false
          schema:
            $ref: "#/definitions/User"
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Removes a specific user
      operationId: remove
      parameters:
        - name: id
          in: path
          description: The user id
          required: true
          type: string
        - $ref: "#/parameters/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  User:
    required:
      - user_name
      - password
      - full_name
      - email
      - role
    properties:
      user_id:
        type: integer
      user_name:
        type: string
      password:
        type: string
      full_name:
        type: string
      created_at:
        type: string
      created_by:
        type: [integer, "null"]
      email:
        type: string
      role:
        type: string
  TokenResponse:
    required:
      - token
    properties:
      token:
        type: string
      user:
        $ref: "#/definitions/User"
  UserCredential:
    required:
      - user_name
      - password
    properties:
      user_name:
        type: string
      password:
        type: string
  GeneralResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Client:
    required:
      - name
      - last_name
    properties:
      client_id:
        type: integer
      name:
        type: string
      last_name:
        type: string
      code_card:
        type: string
      birthdate:
        type: [string, "null"]
      company:
        type: [string, "null"]
      phone:
        type: string
      address:
        type: [string, "null"]
      email:
        type: string
      additional_information:
        type: [string, "null"]
      city:
        type: [string, "null"]
      visit_count:
        type: [integer, "null"]
      created_at:
        type: string
      created_by:
        type: [integer, "null"]
      user_id:
        type: [integer, "null"]
  File:
    properties:
      file_name:
        type: string

